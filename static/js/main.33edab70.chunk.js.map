{"version":3,"sources":["globalStyle.js","utils.js","WebAPI.js","redux/reducers/userReducer.js","components/Header/Header.js","redux/reducers/postReducer.js","pages/HomePage/HomePage.js","pages/AboutPage/AboutPage.js","pages/PostPage/PostPage.js","pages/EditPostPage/EditPostPage.js","pages/LoginPage/LoginPage.js","pages/RegisterPage/RegisterPage.js","pages/ArticlePage/ArticlePage.js","components/App/App.js","redux/store.js","index.js"],"names":["ResetStyle","createGlobalStyle","GlobalStyle","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getMe","fetch","headers","authorization","then","res","json","userReducer","createSlice","name","initialState","isLoading","user","registerResponse","registerError","loginResponse","loginError","reducers","setIsLoading","state","action","payload","setUser","setRegisterResponse","setRegisterError","setLoginResponse","setLoginError","actions","register","data","dispatch","nickname","username","password","method","body","JSON","stringify","registerAPI","code","message","ok","getMeAPI","history","toString","alert","push","login","loginAPI","HeaderContainer","styled","div","Brand","Link","NavbarList","Nav","props","$active","Header","useDispatch","location","useLocation","useHistory","useSelector","store","users","to","pathname","className","onClick","postReducer","isLoadingPosts","posts","totalPosts","isLoadingPost","post","isLoadingNewPost","newPostResponse","isLoadingEditPost","editedPostResponse","isLoadingDeletePost","deletePostResponse","setIsLoadingPosts","setPosts","setTotalPosts","setIsLoadingPost","setPost","setIsLoadingNewPost","setNewPostResponse","setIsLoadingEditPost","setEditedPostResponse","setIsLoadingDeletePost","setDeletePostResponse","getPosts","page","get","getPostsAPI","getPost","id","getPostAPI","article","postNewPost","title","postNewPostAPI","editPost","editPostAPI","deletePost","deletePostAPI","Root","PostsContainer","PostTopContainer","PostTitle","PostDate","PostContent","PaginationContainer","Pagination","PageTeller","Post","Date","createdAt","toLocaleString","HomePage","useState","currentPage","setCurrentPage","isLoadingPostsMsg","changePage","e","currentPageNum","Number","target","innerText","RenderPagination","totalPages","Math","ceil","pageNumbers","i","map","value","index","useEffect","Loading","AboutPage","PostPage","formData","setFormData","errors","setErrors","isLoadingNewPostMsg","preIsLoadingNewPostMsg","ref","useRef","current","usePrevious","handleInputChange","onSubmit","preventDefault","type","placeholder","onChange","required","htmlFor","EditPostPage","params","useParams","isLoadingPostMsg","isLoadingEditPostMsg","preIsLoadingEditPostMsg","window","confirm","LoginPage","updateFormData","isLoadingMsg","errorMsg","RegisterPage","ArticlePage","isLoadingDeleteMsg","href","App","exact","path","configureStore","reducer","ReactDOM","render","theme","colors","primary_300","primary_400","primary_500","document","getElementById"],"mappings":"2UAEaA,EAAaC,YAAH,ojDAwEVC,EAAcD,YAAH,wK,eC1ElBE,EAAa,QAENC,EAAe,SAACC,GAC3BC,aAAaC,QAAQJ,EAAYE,IAGtBG,EAAe,WAC1B,OAAOF,aAAaG,QAAQN,ICLxBO,EAAW,qCA6BJC,EAAQ,WACnB,IAAMN,EAAQG,IACd,OAAOI,MAAM,GAAD,OAAIF,EAAJ,OAAmB,CAC7BG,QAAS,CACPC,cAAc,UAAD,OAAYT,MAE1BU,MAAK,SAACC,GAAD,OAASA,EAAIC,WCpBVC,EAAcC,YAAY,CACrCC,KAAM,OACNC,aAXmB,CACnBC,WAAW,EACXC,KAAM,KACNC,iBAAkB,KAClBC,cAAe,GACfC,cAAe,KACfC,WAAY,IAMZC,SAAU,CACRC,aAAc,SAACC,EAAOC,GACpBD,EAAMR,UAAYS,EAAOC,SAG3BC,QAAS,SAACH,EAAOC,GACfD,EAAMP,KAAOQ,EAAOC,SAGtBE,oBAAqB,SAACJ,EAAOC,GAC3BD,EAAMN,iBAAmBO,EAAOC,SAGlCG,iBAAkB,SAACL,EAAOC,GACxBD,EAAML,cAAgBM,EAAOC,SAG/BI,iBAAkB,SAACN,EAAOC,GACxBD,EAAMJ,cAAgBK,EAAOC,SAG/BK,cAAe,SAACP,EAAOC,GACrBD,EAAMH,WAAaI,EAAOC,YAKzB,EAOHd,EAAYoB,QANdT,EADK,EACLA,aACAI,EAFK,EAELA,QAEAE,GAJK,EAGLD,oBAHK,EAILC,kBAEAE,GANK,EAKLD,iBALK,EAMLC,eAGWE,EAAW,SAACC,GAAD,OAAU,SAACC,GACjCA,EAASZ,GAAa,IDjBA,SAAC,GAAsC,IAApCa,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC7C,OAAOhC,MAAM,GAAD,OAAIF,EAAJ,aAAyB,CACnCmC,OAAQ,OACRhC,QAAS,CACP,eAAgB,oBAElBiC,KAAMC,KAAKC,UAAU,CACnBN,WACAC,WACAC,eAED7B,MAAK,SAACC,GAAD,OAASA,EAAIC,UCOrBgC,CAAYT,GAAMzB,MAAK,SAACC,GAEtB,GADAyB,EAASZ,GAAa,IAClBb,EAAIkC,KACN,OAAOT,EAASN,EAAiBnB,EAAImC,UAExB,IAAXnC,EAAIoC,IACNhD,EAAaY,EAAIX,OAGnBgD,EAASrC,EAAIX,MAAOmC,EAAKc,SAASvC,MAAK,SAACC,GACtC,GAAe,IAAXA,EAAIoC,GAEN,OADAhD,EAAa,MACNqC,EAASN,EAAiBnB,EAAIuC,aAEvCC,MAAM,kCACNf,EAASR,EAAQjB,EAAIwB,OACrBA,EAAKc,QAAQG,KAAK,aAKXC,EAAQ,SAAClB,GAAD,OAAU,SAACC,GAC9BA,EAASZ,GAAa,ID9DH,SAAC,GAA4B,IAA1Bc,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAChC,OAAOhC,MAAM,GAAD,OAAIF,EAAJ,UAAsB,CAChCmC,OAAQ,OACRhC,QAAS,CACP,eAAgB,oBAElBiC,KAAMC,KAAKC,UAAU,CACnBL,WACAC,eAED7B,MAAK,SAACC,GAAD,OAASA,EAAIC,UCqDrB0C,CAASnB,GAAMzB,MAAK,SAACC,GAEnB,GADAyB,EAASZ,GAAa,IACP,IAAXb,EAAIoC,GACN,OAAOX,EAASJ,EAAcrB,EAAImC,UAEpC/C,EAAaY,EAAIX,OAEjBgD,EAASrC,EAAIX,MAAOmC,EAAKc,SAASvC,MAAK,SAACC,GACtC,GAAe,IAAXA,EAAIoC,GAEN,OADAhD,EAAa,MACNqC,EAASJ,EAAcrB,EAAIuC,aAEpCC,MAAM,kCACNf,EAASR,EAAQjB,EAAIwB,OACrBA,EAAKc,QAAQG,KAAK,aAITvC,IAAf,Q,OC5FM0C,EAAkBC,IAAOC,IAAV,mPAYfC,EAAQF,YAAOG,IAAPH,CAAH,6FAMLI,EAAaJ,IAAOC,IAAV,iEAKVI,EAAML,YAAOG,IAAPH,CAAH,kSAYL,SAACM,GAAD,OACAA,EAAMC,SAAN,uEAOW,SAASC,IACtB,IAAM5B,EAAW6B,cACXC,EAAWC,cACXlB,EAAUmB,cACVlD,EAAOmD,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMrD,QAWhD,OACE,eAACqC,EAAD,WACE,cAAC5D,EAAD,IACA,cAACE,EAAD,IACA,cAAC6D,EAAD,CAAOc,GAAG,IAAIT,QAA+B,MAAtBG,EAASO,SAAhC,kBAGA,eAACb,EAAD,CAAYc,UAAU,OAAtB,UACE,cAACb,EAAD,CAAKW,GAAG,SAAST,QAA+B,WAAtBG,EAASO,SAAnC,mBAGCvD,GACC,cAAC2C,EAAD,CAAKW,GAAG,YAAYT,QAA+B,cAAtBG,EAASO,SAAtC,mBAIAvD,GACA,cAAC2C,EAAD,CAAKW,GAAG,SAAST,QAA+B,WAAtBG,EAASO,SAAnC,oBAIDvD,GAAQ,cAAC2C,EAAD,CAAKc,QA9BC,WACnB5E,EAAa,IACbqC,EAASR,EAAQ,OACjBuB,MAAM,kCACoB,MAAtBe,EAASO,UACXxB,EAAQG,KAAK,MAyBF,sBACPlC,GACA,cAAC2C,EAAD,CAAKW,GAAG,YAAYT,QAA+B,cAAtBG,EAASO,SAAtC,2B,8BCjEGG,EAAc9D,YAAY,CACrCC,KAAM,QACNC,aAhBmB,CACnB6D,gBAAgB,EAChBC,MAAO,GACPC,WAAY,EACZC,eAAe,EACfC,KAAM,KACNC,kBAAkB,EAClBC,gBAAiB,KACjBC,mBAAmB,EACnBC,mBAAoB,KACpBC,qBAAqB,EACrBC,mBAAoB,MAMpBhE,SAAU,CACRiE,kBAAmB,SAAC/D,EAAOC,GACzBD,EAAMoD,eAAiBnD,EAAOC,SAGhC8D,SAAU,SAAChE,EAAOC,GAChBD,EAAMqD,MAAQpD,EAAOC,SAGvB+D,cAAe,SAACjE,EAAOC,GACrBD,EAAMsD,WAAarD,EAAOC,SAG5BgE,iBAAkB,SAAClE,EAAOC,GACxBD,EAAMuD,cAAgBtD,EAAOC,SAG/BiE,QAAS,SAACnE,EAAOC,GACfD,EAAMwD,KAAOvD,EAAOC,SAGtBkE,oBAAqB,SAACpE,EAAOC,GAC3BD,EAAMyD,iBAAmBxD,EAAOC,SAGlCmE,mBAAoB,SAACrE,EAAOC,GAC1BD,EAAM0D,gBAAkBzD,EAAOC,SAGjCoE,qBAAsB,SAACtE,EAAOC,GAC5BD,EAAM2D,kBAAoB1D,EAAOC,SAGnCqE,sBAAuB,SAACvE,EAAOC,GAC7BD,EAAM4D,mBAAqB3D,EAAOC,SAGpCsE,uBAAwB,SAACxE,EAAOC,GAC9BD,EAAMR,UAAYS,EAAOC,SAG3BuE,sBAAuB,SAACzE,EAAOC,GAC7BD,EAAM8D,mBAAqB7D,EAAOC,YAKjC,EAYHiD,EAAY3C,QAXduD,EADK,EACLA,kBACAC,EAFK,EAELA,SACAC,GAHK,EAGLA,cACAC,GAJK,EAILA,iBACAC,GALK,EAKLA,QACAC,GANK,EAMLA,oBACAC,GAPK,EAOLA,mBACAC,GARK,EAQLA,qBACAC,GATK,EASLA,sBACAC,GAVK,EAULA,uBACAC,GAXK,EAWLA,sBAGWC,GAAW,SAACC,GAAD,OAAU,SAAChE,GACjCA,EAASoD,GAAkB,IHpFL,SAACY,GACvB,OAAO7F,MAAM,GAAD,OACPF,EADO,oDAC6C+F,EAD7C,cAEV1F,MAAK,SAACC,GAGN,MAAO,CAAEoE,WAFQpE,EAAIH,QAAQ6F,IAAI,iBAEZvB,MADTnE,EAAIC,WGgFlB0F,CAAYF,GACT1F,MAAK,SAACyB,GAGL,OAFAC,EAASoD,GAAkB,IAC3BpD,EAASsD,GAAcvD,EAAK4C,aACrB5C,EAAK2C,SAEbpE,MAAK,SAACoE,GACL1C,EAASqD,EAASX,SAIXyB,GAAU,SAACC,GAAD,OAAQ,SAACpE,GAC9BA,EAASuD,IAAiB,IHvFL,SAACa,GACtB,OAAOjG,MAAM,GAAD,OAAIF,EAAJ,kBAAsBmG,IAAM9F,MAAK,SAACC,GAAD,OAASA,EAAIC,UGuF1D6F,CAAWD,GAAI9F,MAAK,SAACgG,GACnBtE,EAASwD,GAAQc,IACjBtE,EAASuD,IAAiB,SAIjBgB,GAAc,SAACxE,GAAD,OAAU,SAACC,GACpCA,EAASyD,IAAoB,IHvDJ,SAAC,GAAqB,IAAnBe,EAAkB,EAAlBA,MAAOnE,EAAW,EAAXA,KAC7BzC,EAAQG,IACd,OAAOI,MAAM,GAAD,OAAIF,EAAJ,UAAsB,CAChCmC,OAAQ,OACRhC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYT,IAE3ByC,KAAMC,KAAKC,UAAU,CACnBiE,QACAnE,WAED/B,MAAK,SAACC,GAAD,OAASA,EAAIC,UG4CrBiG,CAAe1E,GAAMzB,MAAK,SAACC,GACzByB,EAAS0D,GAAmBnF,IAC5ByB,EAASyD,IAAoB,SAIpBiB,GAAW,SAAC3E,GAAD,OAAU,SAACC,GACjCA,EAAS2D,IAAqB,IHrCR,SAAC,GAAyB,IAAvBS,EAAsB,EAAtBA,GAAII,EAAkB,EAAlBA,MAAOnE,EAAW,EAAXA,KACpC,OAAOlC,MAAM,GAAD,OAAIF,EAAJ,kBAAsBmG,GAAM,CACtChE,OAAQ,QACRhC,QAAS,CACP,eAAgB,oBAElBiC,KAAMC,KAAKC,UAAU,CACnBiE,QACAnE,WAED/B,MAAK,SAACC,GAAD,OAASA,EAAIC,UG4BrBmG,CAAY5E,GAAMzB,MAAK,SAACC,GACtByB,EAAS4D,GAAsBrF,IAC/ByB,EAAS2D,IAAqB,SAIrBiB,GAAa,SAACR,GAAD,OAAQ,SAACpE,GACjCA,EAAS6D,IAAuB,IHxDR,SAACO,GACzB,IAAMxG,EAAQG,IACd,OAAOI,MAAM,GAAD,OAAIF,EAAJ,kBAAsBmG,GAAM,CACtChE,OAAQ,SACRhC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYT,MAE1BU,MAAK,SAACC,GAAD,OAASA,EAAIC,UGiDrBqG,CAAcT,GAAI9F,MAAK,SAACC,GACtByB,EAAS8D,GAAsBvF,IAC/ByB,EAAS6D,IAAuB,SAIrBrB,KAAf,QC5HMsC,GAAO1D,IAAOC,IAAV,4GAOJ0D,GAAiB3D,IAAOC,IAAV,kJAOd2D,GAAmB5D,IAAOC,IAAV,iKAQhB4D,GAAY7D,YAAOG,IAAPH,CAAH,qIAQT8D,GAAW9D,IAAOC,IAAV,8EAKR8D,GAAc/D,IAAOC,IAAV,0PAYX+D,GAAsBhE,IAAOC,IAAV,4FAMnBgE,GAAajE,YAAOG,IAAPH,CAAH,yKAQVkE,GAAalE,IAAOC,IAAV,6GAMhB,SAASkE,GAAT,GAAyB,IAAT1C,EAAQ,EAARA,KACRf,EAAWC,cAEjB,OACE,eAACgD,GAAD,WACE,eAACC,GAAD,WACE,cAACC,GAAD,CACE7C,GAAE,iBAAYS,EAAKuB,IACnBzC,QAA+B,aAAtBG,EAASO,SAFpB,SAIGQ,EAAK2B,QAER,cAACU,GAAD,UAAW,IAAIM,KAAK3C,EAAK4C,WAAWC,sBAEtC,cAACP,GAAD,UAActC,EAAKxC,UAKV,SAASsF,KACtB,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACM9F,EAAW6B,cACXkE,EAAoB9D,aAAY,SAACC,GAAD,OAAWA,EAAMQ,MAAMD,kBACvDC,EAAQT,aAAY,SAACC,GAAD,OAAWA,EAAMQ,MAAMA,SAC3CC,EAAaV,aAAY,SAACC,GAAD,OAAWA,EAAMQ,MAAMC,cAMtD,SAASqD,EAAWC,GAClB,IAAMC,EAAiBC,OAAOF,EAAEG,OAAOC,WACvCP,EAAeI,GACflG,EAAS+D,GAASmC,IAGpB,SAASI,IAGP,IAFA,IAAMC,EAAaC,KAAKC,KAAK9D,EAAa,GACtC+D,EAAc,GACTC,EAAI,EAAGA,GAAKJ,EAAYI,IAC/BD,EAAY1F,KAAK2F,GAEnB,OACE,qCACE,cAACvB,GAAD,UACGsB,EAAYE,KAAI,SAACC,EAAOC,GAAR,OACf,cAACzB,GAAD,CAAwB9C,QAASyD,EAAjC,SACGa,GADcA,QAKrB,eAACvB,GAAD,qBACKO,EADL,oBACyBU,EADzB,gBAON,OAhCAQ,qBAAU,WACR/G,EAAS+D,QACR,CAAC/D,IA+BF,qCACE,cAACzC,EAAD,IACA,cAACE,EAAD,IACCsI,GAAqB,cAACiB,GAAD,yBACtB,eAAClC,GAAD,WACGpC,EAAMkE,KAAI,SAAC/D,GAAD,OACT,cAAC0C,GAAD,CAAoB1C,KAAMA,GAAfA,EAAKuB,OAElB,cAACkC,EAAD,U,MC3IO,SAASW,KACtB,OACE,gCACE,cAAC1J,EAAD,IACA,cAACE,EAAD,IACA,qBAAK6E,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,sBAAf,0yBAeA,qBAAKA,UAAU,+B,2BCPV,SAAS4E,KACtB,MAAgCtB,mBAAS,CACvCpB,MAAO,GACPnE,KAAM,KAFR,mBAAO8G,EAAP,KAAiBC,EAAjB,KAIQ5C,EAAgB2C,EAAhB3C,MAAOnE,EAAS8G,EAAT9G,KACf,EAA4BuF,mBAAS,IAArC,mBAAOyB,EAAP,KAAeC,EAAf,KACMtH,EAAW6B,cACXhB,EAAUmB,cACVlD,EAAOmD,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMrD,QAC1CiE,EAAkBd,aAAY,SAACC,GAAD,OAAWA,EAAMQ,MAAMK,mBACrDwE,EAAsBtF,aAC1B,SAACC,GAAD,OAAWA,EAAMQ,MAAMI,oBAEnB0E,EAxBR,SAAqBX,GACnB,IAAMY,EAAMC,mBAMZ,OAJAX,qBAAU,WACRU,EAAIE,QAAUd,IACb,CAACA,IAEGY,EAAIE,QAiBoBC,CAAYL,GAErCM,EAAoB,SAAC5B,GACzBmB,EAAY,6BACPD,GADM,mBAERlB,EAAEG,OAAOzH,KAAOsH,EAAEG,OAAOS,UA+B9B,OAhBAE,qBAAU,WACR,IAAKQ,GAAuBC,EAC1B,GAAIzE,GAAmBA,EAAgBqB,GACrCrD,MAAM,8CACNF,EAAQG,KAAR,iBAAuB+B,EAAgBqB,UAClC,GAAIrB,EAAgBtC,KACzB,OAAO6G,EAAUvE,EAAgBrC,WAGpC,CAACqC,EAAiBlC,EAAS0G,EAAqBC,IAE9C1I,IACHiC,MAAM,kCACNF,EAAQG,KAAK,WAIb,sBAAKsB,UAAU,eAAf,UACGiF,GAAuB,cAACP,GAAD,yBACxB,cAACzJ,EAAD,IACA,cAACE,EAAD,IACA,qBAAK6E,UAAU,iBAAf,SACE,uBAAMA,UAAU,YAAYwF,SAjCT,SAAC7B,GACxBA,EAAE8B,iBACF/H,EAASuE,GAAY,CAAEC,QAAOnE,WA+B1B,UACE,sBAAKiC,UAAU,oBAAf,UACE,qBAAKA,UAAU,oCAAf,SACE,uBACE0F,KAAK,OACL1F,UAAU,eACV2F,YAAY,0BACZtJ,KAAK,QACLkI,MAAOrC,EACP0D,SAAUL,EACVM,UAAQ,MAGZ,sBAAK7F,UAAU,mCAAf,UACE,0BACEA,UAAU,eACV2F,YAAY,qBACZtJ,KAAK,OACLkI,MAAOxG,EACP6H,SAAUL,EACVM,UAAQ,IAEV,uBAAOC,QAAQ,oBAAf,wCAEF,qBAAK9F,UAAU,mBAAf,SAAmC+E,OAGrC,qBAAK/E,UAAU,oBAAf,SACE,uBACE0F,KAAK,SACLnB,MAAM,SACNvE,UAAU,oC,MCtFT,SAAS+F,KACtB,MAAgCzC,mBAAS,CACvCpB,MAAO,GACPnE,KAAM,KAFR,mBAAO8G,EAAP,KAAiBC,EAAjB,KAIQ5C,EAAgB2C,EAAhB3C,MAAOnE,EAAS8G,EAAT9G,KACTiI,EAASC,cACT1H,EAAUmB,cACVhC,EAAW6B,cACX/C,EAAOmD,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMrD,QAC1C0J,EAAmBvG,aAAY,SAACC,GAAD,OAAWA,EAAMQ,MAAME,iBACtD0B,EAAUrC,aAAY,SAACC,GAAD,OAAWA,EAAMQ,MAAMG,QAC7CI,EAAqBhB,aACzB,SAACC,GAAD,OAAWA,EAAMQ,MAAMO,sBAEnBwF,EAAuBxG,aAC3B,SAACC,GAAD,OAAWA,EAAMQ,MAAMM,qBAEnB0F,EA5BR,SAAqB7B,GACnB,IAAMY,EAAMC,mBAMZ,OAJAX,qBAAU,WACRU,EAAIE,QAAUd,IACb,CAACA,IAEGY,EAAIE,QAqBqBC,CAAYa,GAE5C1B,qBAAU,WACR/G,EAASmE,GAAQmE,EAAOlE,OACvB,CAACkE,EAAOlE,GAAIpE,IAEf,IAAM6H,EAAoB,SAAC5B,GACzBmB,EAAY,6BACPD,GADM,mBAERlB,EAAEG,OAAOzH,KAAOsH,EAAEG,OAAOS,UA+B9B,OAlBAE,qBAAU,YACH0B,GAAwBC,GACvBzF,GAAsBA,EAAmBmB,IAC3CvD,EAAQG,KAAR,iBAAuBiC,EAAmBmB,OAG7C,CACDnB,EACApC,EACA4H,EACAC,IAGG5J,IACHiC,MAAM,kCACNF,EAAQG,KAAK,WAIb,mCACGsD,GACC,sBAAKhC,UAAU,oBAAf,WACIkG,GAAoBC,IACpB,cAACzB,GAAD,yBAEF,cAACzJ,EAAD,IACA,cAACE,EAAD,IACA,qBAAK6E,UAAU,sBAAf,SACE,uBAAMA,UAAU,iBAAiBwF,SArClB,SAAC7B,GACxBA,EAAE8B,iBACF,IAAI3D,EAAKkE,EAAOlE,GACFuE,OAAOC,QAAQ,qDAE3B5I,EAAS0E,GAAS,CAAEN,KAAII,QAAOnE,WAgCzB,UACE,sBAAKiC,UAAU,yBAAf,UACE,qBAAKA,UAAU,yCAAf,SACE,uBACE0F,KAAK,OACL1F,UAAU,eACV2F,YAAa3D,EAAQE,MACrB7F,KAAK,QACLkI,MAAOrC,EACP0D,SAAUL,EACVM,UAAQ,MAGZ,qBAAK7F,UAAU,qCAAf,SACE,0BACEA,UAAU,eACV2F,YAAa3D,EAAQjE,KACrB1B,KAAK,OACLkI,MAAOxG,EACP6H,SAAUL,EACVM,UAAQ,SAKd,qBAAK7F,UAAU,yBAAf,SACE,uBACE0F,KAAK,SACLnB,MAAM,SACNvE,UAAU,2C,MC1Gb,SAASuG,KACtB,MAAgCjD,mBAAS,CACvC1F,SAAU,GACVC,SAAU,KAFZ,mBAAOgH,EAAP,KAAiBC,EAAjB,KAIQlH,EAAuBiH,EAAvBjH,SAAUC,EAAagH,EAAbhH,SACZ2I,EAAiB,SAAC7C,GACtBmB,EAAY,6BACPD,GADM,mBAERlB,EAAEG,OAAOzH,KAAOsH,EAAEG,OAAOS,UAGxBhG,EAAUmB,cACVhC,EAAW6B,cACXkH,EAAe9G,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMtD,aAClDmK,EAAW/G,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMjD,cAapD,OANA6H,qBAAU,WACR,OAAO,WACL/G,EAASJ,EAAc,UAExB,CAACI,IAGF,sBAAKsC,UAAU,gBAAf,UACE,cAAC/E,EAAD,IACA,cAACE,EAAD,IACCsL,GAAgB,cAAC/B,GAAD,yBACjB,qBAAK1E,UAAU,kBAAf,SACE,uBAAMwF,SAjBS,SAAC7B,GACpBA,EAAE8B,iBACF/H,EAASiB,EAAM,CAAEf,WAAUC,WAAUU,cAejC,UACE,sBAAKyB,UAAU,aAAf,qBAEE,uBACA,uBACEA,UAAU,cACV0F,KAAK,OACLrJ,KAAK,WACLkI,MAAO3G,EACPgI,SAAU,SAACjC,GAAD,OAAO6C,EAAe7C,IAChCkC,UAAQ,IAEV,0BAEF,sBAAK7F,UAAU,aAAf,qBAEE,uBACA,uBACEA,UAAU,cACV0F,KAAK,WACLrJ,KAAK,WACLkI,MAAO1G,EACP+H,SAAU,SAACjC,GAAD,OAAO6C,EAAe7C,IAChCkC,UAAQ,IAEV,uBACA,+BAAOa,OAET,8BACE,uBAAO1G,UAAU,eAAe0F,KAAK,SAASnB,MAAM,sB,MCjEjD,SAASoC,KACtB,MAAgCrD,mBAAS,CACvC3F,SAAU,GACVC,SAAU,GACVC,SAAU,KAHZ,mBAAOgH,EAAP,KAAiBC,EAAjB,KAKQnH,EAAiCkH,EAAjClH,SAAUC,EAAuBiH,EAAvBjH,SAAUC,EAAagH,EAAbhH,SACtB2I,EAAiB,SAAC7C,GACtBmB,EAAY,6BACPD,GADM,mBAERlB,EAAEG,OAAOzH,KAAOsH,EAAEG,OAAOS,UAIxB7G,EAAW6B,cACXhB,EAAUmB,cACV+G,EAAe9G,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMtD,aAClDmK,EAAW/G,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMnD,iBAapD,OANA+H,qBAAU,WACR,OAAO,WACL/G,EAASN,EAAiB,UAE3B,CAACM,IAGF,sBAAKsC,UAAU,mBAAf,UACE,cAAC/E,EAAD,IACA,cAACE,EAAD,IACCsL,GAAgB,cAAC/B,GAAD,yBACjB,qBAAK1E,UAAU,qBAAf,SACE,uBAAMwF,SAjBS,SAAC7B,GACpBA,EAAE8B,iBACF/H,EAASF,EAAS,CAAEG,WAAUC,WAAUC,WAAUU,cAe9C,UACE,sBAAKyB,UAAU,gBAAf,qBAEE,uBACA,uBACEA,UAAU,iBACV0F,KAAK,OACLrJ,KAAK,WACLsJ,YAAY,2BACZpB,MAAO5G,EACPiI,SAAU,SAACjC,GAAD,OAAO6C,EAAe7C,MAGlC,0BAEF,sBAAK3D,UAAU,gBAAf,qBAEE,uBACA,uBACEA,UAAU,iBACV0F,KAAK,OACLrJ,KAAK,WACLsJ,YAAY,6CACZpB,MAAO3G,EACPgI,SAAU,SAACjC,GAAD,OAAO6C,EAAe7C,MAGlC,0BAEF,sBAAK3D,UAAU,gBAAf,qBAEE,uBACA,uBACEA,UAAU,iBACV0F,KAAK,WACLrJ,KAAK,WACLsJ,YAAY,2BACZpB,MAAO1G,EACP+H,SAAU,SAACjC,GAAD,OAAO6C,EAAe7C,MAGlC,uBACA,+BAAO+C,OAET,8BACE,uBAAO1G,UAAU,kBAAkB0F,KAAK,SAASnB,MAAM,qB,gBChFpD,SAASqC,KACtB,IAAMpK,EAAOmD,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMrD,QAC1CwJ,EAASC,cACT1H,EAAUmB,cACVhC,EAAW6B,cACX2G,EAAmBvG,aAAY,SAACC,GAAD,OAAWA,EAAMQ,MAAME,iBACtD0B,EAAUrC,aAAY,SAACC,GAAD,OAAWA,EAAMQ,MAAMG,QAC7CsG,EAAqBlH,aACzB,SAACC,GAAD,OAAWA,EAAMQ,MAAMQ,uBAGzB6D,qBAAU,WACR/G,EAASmE,GAAQmE,EAAOlE,OACvB,CAACkE,EAAOlE,GAAIpE,IAoBf,OANA+G,qBAAU,WACR,OAAO,WACL/G,EAASwD,GAAQ,UAElB,CAACxD,IAGF,qCACE,cAACzC,EAAD,IACA,cAACE,EAAD,IACA,8BACG6G,GACC,sBAAKhC,UAAU,UAAf,WACIkG,GAAoBW,IACpB,cAACnC,GAAD,yBAEF,6BAAK1C,EAAQE,QACb,4BAAI,IAAIgB,KAAKlB,EAAQmB,WAAWC,mBAChC,qBAAKpD,UAAU,mBAAf,SAAmCgC,EAAQjE,OAC3C,sBAAKiC,UAAU,wBAAf,UACE,wBACE0F,KAAK,SACL1F,UAAU,oCACVC,QAnCM,WAClB1B,EAAQG,KAAK,MA+BH,4CAOA,gCACGlC,GACC,mBAAGsK,KAAI,sBAAiBd,EAAOlE,IAA/B,SACE,wBACE4D,KAAK,SACL1F,UAAU,4CAFZ,oBAQHxD,GACC,wBACEkJ,KAAK,SACL1F,UAAU,4CACVC,QAlDG,WACHoG,OAAOC,QAAQ,sDAE7B5I,EAAS4E,GAAW0D,EAAOlE,KAC3BvD,EAAQG,KAAK,OA2CD,kCChElB,IAAM8D,GAAO1D,IAAOC,IAAV,kJAMJ2F,GAAU5F,IAAOC,IAAV,sSAoDEgI,OAnCf,WACE,OACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAACzH,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0H,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC5D,GAAD,MAEF,cAAC,IAAD,CAAO4D,KAAK,SAAZ,SACE,cAACtC,GAAD,MAEF,cAAC,IAAD,CAAOsC,KAAK,YAAZ,SACE,cAACrC,GAAD,MAEF,cAAC,IAAD,CAAOqC,KAAK,iBAAZ,SACE,cAAClB,GAAD,MAEF,cAAC,IAAD,CAAOkB,KAAK,SAAZ,SACE,cAACV,GAAD,MAEF,cAAC,IAAD,CAAOU,KAAK,YAAZ,SACE,cAACN,GAAD,MAEF,cAAC,IAAD,CAAOM,KAAK,aAAZ,SACE,cAACL,GAAD,eCvDGM,eAAe,CAC5BC,QAAS,CACP/G,MAAOF,GACPL,MAAO1D,KCQXiL,IAASC,OACP,cAAC,IAAD,CAAUzH,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAe0H,MAVL,CACZC,OAAQ,CACNC,YAAa,UACbC,YAAa,UACbC,YAAa,YAMb,SACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.33edab70.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nexport const ResetStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n  box-sizing: border-box;\n}\naddress, caption, cite, code, dfn, em, strong, th, var, b {\n  font-weight: normal;\n  font-style: normal;\n}\nabbr, acronym {\n  border: 0;\n}\narticle, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n  display: block;\n}\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n}\nhtml {\n  text-size-adjust: 100%;\n  box-sizing: border-box;\n}\nbody {\n    line-height: 1;\n}\nol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote {\n  &:before,   &:after {\n    content: '';\n    content: none;\n  }\n}\nq {\n  &:before,   &:after {\n    content: '';\n    content: none;\n  }\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\ncaption, th {\n  text-align: left;\n}\ntextarea {\n  resize: none;\n}\na {\n  text-decoration: none;\n  cursor: pointer;\n}\nbutton {\n  padding: 0;\n  border: none;\n  background: none;\n}\n`\nexport const GlobalStyle = createGlobalStyle`\nhtml {\n  box-sizing: border-box;\n  font-size: 62.5%; \n  font-family: 'HelveticaNeue', Helvetica, Arial, 'Lucida Grande', sans-serif;\n}\n`\n","const TOKEN_NAME = 'token'\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token)\n}\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME)\n}\n","import { getAuthToken } from './utils'\n\nconst BASE_URL = 'https://student-json-api.lidemy.me'\n\nexport const getPosts = (page) => {\n  return fetch(\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}&_limit=5`\n  ).then((res) => {\n    let totalPosts = res.headers.get('x-total-count')\n    let posts = res.json()\n    return { totalPosts, posts }\n  })\n}\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json())\n}\n\nexport const login = ({ username, password }) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then((res) => res.json())\n}\n\nexport const getMe = () => {\n  const token = getAuthToken()\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`\n    }\n  }).then((res) => res.json())\n}\n\nexport const register = ({ nickname, username, password }) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password\n    })\n  }).then((res) => res.json())\n}\n\nexport const postNewPost = ({ title, body }) => {\n  const token = getAuthToken()\n  return fetch(`${BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      title,\n      body\n    })\n  }).then((res) => res.json())\n}\n\nexport const deletePost = (id) => {\n  const token = getAuthToken()\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'content-type': 'application/json',\n      authorization: `Bearer ${token}`\n    }\n  }).then((res) => res.json())\n}\n\nexport const editPost = ({ id, title, body }) => {\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      title,\n      body\n    })\n  }).then((res) => res.json())\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport { setAuthToken } from '../../utils'\nimport {\n  getMe as getMeAPI,\n  register as registerAPI,\n  login as loginAPI\n} from '../../WebAPI'\n\nconst initialState = {\n  isLoading: false,\n  user: null,\n  registerResponse: null,\n  registerError: '',\n  loginResponse: null,\n  loginError: ''\n}\n\nexport const userReducer = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setIsLoading: (state, action) => {\n      state.isLoading = action.payload\n    },\n\n    setUser: (state, action) => {\n      state.user = action.payload\n    },\n\n    setRegisterResponse: (state, action) => {\n      state.registerResponse = action.payload\n    },\n\n    setRegisterError: (state, action) => {\n      state.registerError = action.payload\n    },\n\n    setLoginResponse: (state, action) => {\n      state.loginResponse = action.payload\n    },\n\n    setLoginError: (state, action) => {\n      state.loginError = action.payload\n    }\n  }\n})\n\nexport const {\n  setIsLoading,\n  setUser,\n  setRegisterResponse,\n  setRegisterError,\n  setLoginResponse,\n  setLoginError\n} = userReducer.actions\n\nexport const register = (data) => (dispatch) => {\n  dispatch(setIsLoading(true))\n  registerAPI(data).then((res) => {\n    dispatch(setIsLoading(false))\n    if (res.code) {\n      return dispatch(setRegisterError(res.message))\n    }\n    if (res.ok === 1) {\n      setAuthToken(res.token)\n    }\n\n    getMeAPI(res.token, data.history).then((res) => {\n      if (res.ok !== 1) {\n        setAuthToken(null)\n        return dispatch(setRegisterError(res.toString()))\n      }\n      alert('註冊成功！')\n      dispatch(setUser(res.data))\n      data.history.push('/')\n    })\n  })\n}\n\nexport const login = (data) => (dispatch) => {\n  dispatch(setIsLoading(true))\n  loginAPI(data).then((res) => {\n    dispatch(setIsLoading(false))\n    if (res.ok === 0) {\n      return dispatch(setLoginError(res.message))\n    }\n    setAuthToken(res.token)\n\n    getMeAPI(res.token, data.history).then((res) => {\n      if (res.ok !== 1) {\n        setAuthToken(null)\n        return dispatch(setLoginError(res.toString()))\n      }\n      alert('登入成功！')\n      dispatch(setUser(res.data))\n      data.history.push('/')\n    })\n  })\n}\nexport default userReducer.reducer\n","import styled from 'styled-components'\nimport { ResetStyle, GlobalStyle } from '../../globalStyle'\nimport { Link, useLocation, useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setUser } from '../../redux/reducers/userReducer'\nimport { setAuthToken } from '../../utils'\n\nconst HeaderContainer = styled.div`\n  letter-spacing: 1px;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  position: fixed;\n  background-color: white;\n  justify-content: space-evenly;\n  z-index: 2;\n  border-bottom: 1px solid black;\n`\n\nconst Brand = styled(Link)`\n  font-size: 50px;\n  text-decoration: none;\n  color: #010101;\n`\n\nconst NavbarList = styled.div`\n  display: flex;\n  color: #010101;\n`\n\nconst Nav = styled(Link)`\n  border-left: 1px solid black;\n  box-sizing: border-box;\n  padding: 35px 40px 35px 40px;\n  font-size: 20px;\n  text-align: center;\n  color: #010101;\n  display: flex;\n  transition: all 0.2s ease-in;\n  cursor: pointer;\n  text-decoration: none;\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: rgba(36, 35, 35, 0.9);\n    color: white;\n    `};\n`\n\nexport default function Header() {\n  const dispatch = useDispatch()\n  const location = useLocation()\n  const history = useHistory()\n  const user = useSelector((store) => store.users.user)\n\n  const handleLogout = () => {\n    setAuthToken('')\n    dispatch(setUser(null))\n    alert('登出成功！')\n    if (location.pathname !== '/') {\n      history.push('/')\n    }\n  }\n\n  return (\n    <HeaderContainer>\n      <ResetStyle />\n      <GlobalStyle />\n      <Brand to=\"/\" $active={location.pathname === '/'}>\n        BLOG\n      </Brand>\n      <NavbarList className=\"tags\">\n        <Nav to=\"/about\" $active={location.pathname === '/about'}>\n          ABOUT\n        </Nav>\n        {user && (\n          <Nav to=\"/new-post\" $active={location.pathname === '/new-post'}>\n            POST\n          </Nav>\n        )}\n        {!user && (\n          <Nav to=\"/login\" $active={location.pathname === '/login'}>\n            LOG IN\n          </Nav>\n        )}\n        {user && <Nav onClick={handleLogout}>LOG OUT</Nav>}\n        {!user && (\n          <Nav to=\"/register\" $active={location.pathname === '/register'}>\n            SIGN UP\n          </Nav>\n        )}\n      </NavbarList>\n    </HeaderContainer>\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  getPosts as getPostsAPI,\n  getPost as getPostAPI,\n  postNewPost as postNewPostAPI,\n  editPost as editPostAPI,\n  deletePost as deletePostAPI\n} from '../../WebAPI'\n\nconst initialState = {\n  isLoadingPosts: false,\n  posts: [],\n  totalPosts: 0,\n  isLoadingPost: false,\n  post: null,\n  isLoadingNewPost: false,\n  newPostResponse: null,\n  isLoadingEditPost: false,\n  editedPostResponse: null,\n  isLoadingDeletePost: false,\n  deletePostResponse: null\n}\n\nexport const postReducer = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    setIsLoadingPosts: (state, action) => {\n      state.isLoadingPosts = action.payload\n    },\n\n    setPosts: (state, action) => {\n      state.posts = action.payload\n    },\n\n    setTotalPosts: (state, action) => {\n      state.totalPosts = action.payload\n    },\n\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload\n    },\n\n    setPost: (state, action) => {\n      state.post = action.payload\n    },\n\n    setIsLoadingNewPost: (state, action) => {\n      state.isLoadingNewPost = action.payload\n    },\n\n    setNewPostResponse: (state, action) => {\n      state.newPostResponse = action.payload\n    },\n\n    setIsLoadingEditPost: (state, action) => {\n      state.isLoadingEditPost = action.payload\n    },\n\n    setEditedPostResponse: (state, action) => {\n      state.editedPostResponse = action.payload\n    },\n\n    setIsLoadingDeletePost: (state, action) => {\n      state.isLoading = action.payload\n    },\n\n    setDeletePostResponse: (state, action) => {\n      state.deletePostResponse = action.payload\n    }\n  }\n})\n\nexport const {\n  setIsLoadingPosts,\n  setPosts,\n  setTotalPosts,\n  setIsLoadingPost,\n  setPost,\n  setIsLoadingNewPost,\n  setNewPostResponse,\n  setIsLoadingEditPost,\n  setEditedPostResponse,\n  setIsLoadingDeletePost,\n  setDeletePostResponse\n} = postReducer.actions\n\nexport const getPosts = (page) => (dispatch) => {\n  dispatch(setIsLoadingPosts(true))\n  getPostsAPI(page)\n    .then((data) => {\n      dispatch(setIsLoadingPosts(false))\n      dispatch(setTotalPosts(data.totalPosts))\n      return data.posts\n    })\n    .then((posts) => {\n      dispatch(setPosts(posts))\n    })\n}\n\nexport const getPost = (id) => (dispatch) => {\n  dispatch(setIsLoadingPost(true))\n  getPostAPI(id).then((article) => {\n    dispatch(setPost(article))\n    dispatch(setIsLoadingPost(false))\n  })\n}\n\nexport const postNewPost = (data) => (dispatch) => {\n  dispatch(setIsLoadingNewPost(true))\n  postNewPostAPI(data).then((res) => {\n    dispatch(setNewPostResponse(res))\n    dispatch(setIsLoadingNewPost(false))\n  })\n}\n\nexport const editPost = (data) => (dispatch) => {\n  dispatch(setIsLoadingEditPost(true))\n  editPostAPI(data).then((res) => {\n    dispatch(setEditedPostResponse(res))\n    dispatch(setIsLoadingEditPost(false))\n  })\n}\n\nexport const deletePost = (id) => (dispatch) => {\n  dispatch(setIsLoadingDeletePost(true))\n  deletePostAPI(id).then((res) => {\n    dispatch(setDeletePostResponse(res))\n    dispatch(setIsLoadingDeletePost(false))\n  })\n}\n\nexport default postReducer.reducer\n","import React, { useState, useEffect } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ResetStyle, GlobalStyle } from '../../globalStyle'\nimport { getPosts } from '../../redux/reducers/postReducer'\nimport { Loading } from '../../components/App/App'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  padding-top: 100px;\n  position: relative;\n`\n\nconst PostsContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 40px 10px;\n  border: 1px solid black;\n  margin: 20px;\n`\n\nconst PostTopContainer = styled.div`\n  padding-bottom: 30px;\n  margin: 0px 18px 15px 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst PostTitle = styled(Link)`\n  font-weight: 600;\n  line-height: 4rem;\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`\n\nconst PostDate = styled.div`\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.8);\n`\n\nconst PostContent = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n  margin: 0 18px;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n  white-space: pre-line;\n  font-size: 19px;\n  line-height: 4rem;\n`\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n`\n\nconst Pagination = styled(Link)`\n  font-weight: 500;\n  color: rgba(0, 0, 0, 0.7);\n  text-decoration: none;\n  margin: 10px 5px;\n  font-size: 28px;\n  padding: 10px 18px;\n`\nconst PageTeller = styled.div`\n  font-size: 16px;\n  color: grey;\n  text-align: center;\n  padding: 0 0 50px;\n`\nfunction Post({ post }) {\n  const location = useLocation()\n\n  return (\n    <PostsContainer>\n      <PostTopContainer>\n        <PostTitle\n          to={`/posts/${post.id}`}\n          $active={location.pathname === '/article'}\n        >\n          {post.title}\n        </PostTitle>\n        <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n      </PostTopContainer>\n      <PostContent>{post.body}</PostContent>\n    </PostsContainer>\n  )\n}\n\nexport default function HomePage() {\n  const [currentPage, setCurrentPage] = useState(1)\n  const dispatch = useDispatch()\n  const isLoadingPostsMsg = useSelector((store) => store.posts.isLoadingPosts)\n  const posts = useSelector((store) => store.posts.posts)\n  const totalPosts = useSelector((store) => store.posts.totalPosts)\n\n  useEffect(() => {\n    dispatch(getPosts())\n  }, [dispatch])\n\n  function changePage(e) {\n    const currentPageNum = Number(e.target.innerText)\n    setCurrentPage(currentPageNum)\n    dispatch(getPosts(currentPageNum))\n  }\n\n  function RenderPagination() {\n    const totalPages = Math.ceil(totalPosts / 5)\n    let pageNumbers = []\n    for (let i = 1; i <= totalPages; i++) {\n      pageNumbers.push(i)\n    }\n    return (\n      <>\n        <PaginationContainer>\n          {pageNumbers.map((value, index) => (\n            <Pagination key={value} onClick={changePage}>\n              {value}\n            </Pagination>\n          ))}\n        </PaginationContainer>\n        <PageTeller>\n          第 {currentPage} 頁 / 共 {totalPages} 頁\n        </PageTeller>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <ResetStyle />\n      <GlobalStyle />\n      {isLoadingPostsMsg && <Loading>Loading...</Loading>}\n      <Root>\n        {posts.map((post) => (\n          <Post key={post.id} post={post} />\n        ))}\n        <RenderPagination></RenderPagination>\n      </Root>\n    </>\n  )\n}\n","import { ResetStyle, GlobalStyle } from '../../globalStyle'\nimport './about.css'\n\nexport default function AboutPage() {\n  return (\n    <div>\n      <ResetStyle />\n      <GlobalStyle />\n      <div className=\"about-container\">\n        <div className=\"about-profile\">\n          <div className=\"about-profile__info\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut ipsum\n            velit, pharetra sit amet hendrerit quis, ultricies non purus. Ut\n            consequat varius eros, sit amet posuere erat sodales eu. Phasellus\n            leo nisl, consectetur vel efficitur a, convallis sed lectus. Nunc\n            rutrum, est nec malesuada dictum, tellus lorem tincidunt ligula, at\n            consectetur felis purus non eros. Vivamus tempor nisi lacus, sed\n            commodo tellus ultricies vel. Class aptent taciti sociosqu ad litora\n            torquent per conubia nostra, per inceptos himenaeos. Proin\n            sollicitudin, metus in tempus condimentum, lorem sapien interdum\n            dolor, ut posuere dolor lectus at diam. Suspendisse fermentum turpis\n            quis aliquam dignissim. Morbi eu hendrerit erat, vitae imperdiet\n            nisl. Praesent a aliquet urna, a ultrices sem. Sed in consectetur\n            augue.\n          </div>\n          <div className=\"about-profile__pic\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useHistory } from 'react-router'\nimport { ResetStyle, GlobalStyle } from '../../globalStyle'\nimport './post.css'\nimport { Loading } from '../../components/App/App'\nimport { postNewPost } from '../../redux/reducers/postReducer'\nimport { useDispatch, useSelector } from 'react-redux'\n\nfunction usePrevious(value) {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default function PostPage() {\n  const [formData, setFormData] = useState({\n    title: '',\n    body: ''\n  })\n  const { title, body } = formData\n  const [errors, setErrors] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const user = useSelector((store) => store.users.user)\n  const newPostResponse = useSelector((store) => store.posts.newPostResponse)\n  const isLoadingNewPostMsg = useSelector(\n    (store) => store.posts.isLoadingNewPost\n  )\n  const preIsLoadingNewPostMsg = usePrevious(isLoadingNewPostMsg)\n\n  const handleInputChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault()\n    dispatch(postNewPost({ title, body }))\n  }\n\n  /* 監聽 newPostResponse\n  1. 發 request 前，isLoadingMsg = false, preIsLoadingNewPost = false\n  2. 發 request 後，isLoadingMsg = true, preIsLoadingNewPost = false\n  3. 收到 response，isLoadingMsg = false, preIsLoadingNewPost = true\n  */\n\n  useEffect(() => {\n    if (!isLoadingNewPostMsg && preIsLoadingNewPostMsg) {\n      if (newPostResponse && newPostResponse.id) {\n        alert('發布文章成功！')\n        history.push(`/posts/${newPostResponse.id}`)\n      } else if (newPostResponse.code) {\n        return setErrors(newPostResponse.message)\n      }\n    }\n  }, [newPostResponse, history, isLoadingNewPostMsg, preIsLoadingNewPostMsg])\n\n  if (!user) {\n    alert('請先登入！')\n    history.push('/login')\n  }\n\n  return (\n    <div className=\"post-wrapper\">\n      {isLoadingNewPostMsg && <Loading>Loading...</Loading>}\n      <ResetStyle />\n      <GlobalStyle />\n      <div className=\"post-container\">\n        <form className=\"post-form\" onSubmit={handleFormSubmit}>\n          <div className=\"post-form__editor\">\n            <div className=\"post-form__title input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Enter the title here...\"\n                name=\"title\"\n                value={title}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"post-form__content form-floating\">\n              <textarea\n                className=\"form-control\"\n                placeholder=\"Leave a comment...\"\n                name=\"body\"\n                value={body}\n                onChange={handleInputChange}\n                required\n              ></textarea>\n              <label htmlFor=\"floatingTextarea2\">Leave something here...</label>\n            </div>\n            <div className=\"post-form__error\">{errors}</div>\n          </div>\n\n          <div className=\"post-form__submit\">\n            <input\n              type=\"submit\"\n              value=\"SUBMIT\"\n              className=\"post-form__submit-btn\"\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useHistory } from 'react-router'\nimport { ResetStyle, GlobalStyle } from '../../globalStyle'\nimport './editPost.css'\nimport { Loading } from '../../components/App/App'\nimport { getPost, editPost } from '../../redux/reducers/postReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\nfunction usePrevious(value) {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default function EditPostPage() {\n  const [formData, setFormData] = useState({\n    title: '',\n    body: ''\n  })\n  const { title, body } = formData\n  const params = useParams()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const user = useSelector((store) => store.users.user)\n  const isLoadingPostMsg = useSelector((store) => store.posts.isLoadingPost)\n  const article = useSelector((store) => store.posts.post)\n  const editedPostResponse = useSelector(\n    (store) => store.posts.editedPostResponse\n  )\n  const isLoadingEditPostMsg = useSelector(\n    (store) => store.posts.isLoadingEditPost\n  )\n  const preIsLoadingEditPostMsg = usePrevious(isLoadingEditPostMsg)\n\n  useEffect(() => {\n    dispatch(getPost(params.id))\n  }, [params.id, dispatch])\n\n  const handleInputChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault()\n    let id = params.id\n    let editMsg = window.confirm('確定修改文章嗎？')\n    if (editMsg) {\n      dispatch(editPost({ id, title, body }))\n    }\n  }\n\n  useEffect(() => {\n    if (!isLoadingEditPostMsg && preIsLoadingEditPostMsg) {\n      if (editedPostResponse && editedPostResponse.id) {\n        history.push(`/posts/${editedPostResponse.id}`)\n      }\n    }\n  }, [\n    editedPostResponse,\n    history,\n    isLoadingEditPostMsg,\n    preIsLoadingEditPostMsg\n  ])\n\n  if (!user) {\n    alert('請先登入！')\n    history.push('/login')\n  }\n\n  return (\n    <>\n      {article && (\n        <div className=\"edit-post-wrapper\">\n          {(isLoadingPostMsg || isLoadingEditPostMsg) && (\n            <Loading>Loading...</Loading>\n          )}\n          <ResetStyle />\n          <GlobalStyle />\n          <div className=\"edit-post-container\">\n            <form className=\"edit-post-form\" onSubmit={handleFormSubmit}>\n              <div className=\"edit-post-form__editor\">\n                <div className=\"edit-post-form__title input-group mb-3\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder={article.title}\n                    name=\"title\"\n                    value={title}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <div className=\"edit-post-form__content form-group\">\n                  <textarea\n                    className=\"form-control\"\n                    placeholder={article.body}\n                    name=\"body\"\n                    value={body}\n                    onChange={handleInputChange}\n                    required\n                  ></textarea>\n                </div>\n              </div>\n\n              <div className=\"edit-post-form__submit\">\n                <input\n                  type=\"submit\"\n                  value=\"SUBMIT\"\n                  className=\"edit-post-form__submit-btn\"\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { ResetStyle, GlobalStyle } from '../../globalStyle'\nimport { useHistory } from 'react-router'\n\nimport { Loading } from '../../components/App/App'\nimport './login.css'\n// import { getMe, login } from '../../WebAPI'\nimport { login, setLoginError } from '../../redux/reducers/userReducer'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport default function LoginPage() {\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  })\n  const { username, password } = formData\n  const updateFormData = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    })\n  }\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const isLoadingMsg = useSelector((store) => store.users.isLoading)\n  const errorMsg = useSelector((store) => store.users.loginError)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    dispatch(login({ username, password, history }))\n  }\n\n  useEffect(() => {\n    return () => {\n      dispatch(setLoginError(null))\n    }\n  }, [dispatch])\n\n  return (\n    <div className=\"login-wrapper\">\n      <ResetStyle />\n      <GlobalStyle />\n      {isLoadingMsg && <Loading>Loading...</Loading>}\n      <div className=\"login-container\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"login-form\">\n            USERNAME\n            <br />\n            <input\n              className=\"login-input\"\n              type=\"text\"\n              name=\"username\"\n              value={username}\n              onChange={(e) => updateFormData(e)}\n              required\n            />\n            <br />\n          </div>\n          <div className=\"login-form\">\n            PASSWORD\n            <br />\n            <input\n              className=\"login-input\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={(e) => updateFormData(e)}\n              required\n            />\n            <br />\n            <span>{errorMsg}</span>\n          </div>\n          <div>\n            <input className=\"login-submit\" type=\"submit\" value=\"SIGN IN\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { ResetStyle, GlobalStyle } from '../../globalStyle'\nimport { useHistory } from 'react-router'\nimport { Loading } from '../../components/App/App'\nimport './register.css'\nimport { register, setRegisterError } from '../../redux/reducers/userReducer'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport default function RegisterPage() {\n  const [formData, setFormData] = useState({\n    nickname: '',\n    username: '',\n    password: ''\n  })\n  const { nickname, username, password } = formData\n  const updateFormData = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const isLoadingMsg = useSelector((store) => store.users.isLoading)\n  const errorMsg = useSelector((store) => store.users.registerError)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    dispatch(register({ nickname, username, password, history }))\n  }\n\n  useEffect(() => {\n    return () => {\n      dispatch(setRegisterError(null))\n    }\n  }, [dispatch])\n\n  return (\n    <div className=\"register-wrapper\">\n      <ResetStyle />\n      <GlobalStyle />\n      {isLoadingMsg && <Loading>Loading...</Loading>}\n      <div className=\"register-container\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"register-form\">\n            NICKNAME\n            <br />\n            <input\n              className=\"register-input\"\n              type=\"text\"\n              name=\"nickname\"\n              placeholder=\"您的暱稱\"\n              value={nickname}\n              onChange={(e) => updateFormData(e)}\n              // required\n            />\n            <br />\n          </div>\n          <div className=\"register-form\">\n            USERNAME\n            <br />\n            <input\n              className=\"register-input\"\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"您的使用者名稱\"\n              value={username}\n              onChange={(e) => updateFormData(e)}\n              // required\n            />\n            <br />\n          </div>\n          <div className=\"register-form\">\n            PASSWORD\n            <br />\n            <input\n              className=\"register-input\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"您的密碼\"\n              value={password}\n              onChange={(e) => updateFormData(e)}\n              // required\n            />\n            <br />\n            <span>{errorMsg}</span>\n          </div>\n          <div>\n            <input className=\"register-submit\" type=\"submit\" value=\"SUBMIT\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router'\nimport { ResetStyle, GlobalStyle } from '../../globalStyle'\nimport './article.css'\nimport { useParams } from 'react-router-dom'\nimport { Loading } from '../../components/App/App'\nimport { getPost, setPost, deletePost } from '../../redux/reducers/postReducer'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport default function ArticlePage() {\n  const user = useSelector((store) => store.users.user)\n  const params = useParams()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const isLoadingPostMsg = useSelector((store) => store.posts.isLoadingPost)\n  const article = useSelector((store) => store.posts.post)\n  const isLoadingDeleteMsg = useSelector(\n    (store) => store.posts.isLoadingDeletePost\n  )\n\n  useEffect(() => {\n    dispatch(getPost(params.id))\n  }, [params.id, dispatch])\n\n  const handleClick = () => {\n    history.push('/')\n  }\n\n  const handleDelete = () => {\n    let deleteMsg = window.confirm('確定刪除文章嗎？')\n    if (deleteMsg) {\n      dispatch(deletePost(params.id))\n      history.push('/')\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      dispatch(setPost(null))\n    }\n  }, [dispatch])\n\n  return (\n    <>\n      <ResetStyle />\n      <GlobalStyle />\n      <div>\n        {article && (\n          <div className=\"article\">\n            {(isLoadingPostMsg || isLoadingDeleteMsg) && (\n              <Loading>Loading...</Loading>\n            )}\n            <h1>{article.title}</h1>\n            <p>{new Date(article.createdAt).toLocaleString()}</p>\n            <div className=\"article__content\">{article.body}</div>\n            <div className=\"article__content-btns\">\n              <button\n                type=\"button\"\n                className=\"article__content-btn btn btn-dark\"\n                onClick={handleClick}\n              >\n                回文章列表\n              </button>\n              <div>\n                {user && (\n                  <a href={`#/edit-post/${params.id}`}>\n                    <button\n                      type=\"button\"\n                      className=\"article__content-btn btn btn-outline-dark\"\n                    >\n                      EDIT\n                    </button>\n                  </a>\n                )}\n                {user && (\n                  <button\n                    type=\"button\"\n                    className=\"article__content-btn btn btn-outline-dark\"\n                    onClick={handleDelete}\n                  >\n                    DELETE\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n","import { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Header from '../Header'\nimport HomePage from '../../pages/HomePage'\nimport AboutPage from '../../pages/AboutPage'\nimport PostPage from '../../pages/PostPage'\nimport EditPostPage from '../../pages/EditPostPage'\nimport LoginPage from '../../pages/LoginPage'\nimport RegisterPage from '../../pages/RegisterPage'\nimport ArticlePage from '../../pages/ArticlePage'\n\nconst Root = styled.div`\n  letter-spacing: 1px;\n  max-width: 100vw;\n  font-family: Baskerville, Georgia, 'Times New Roman', Times, serif;\n`\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.9);\n  font-weight: 600;\n  color: white;\n  font-size: 72px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  z-index: 1;\n`\n\nfunction App() {\n  return (\n    <Root>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/about\">\n            <AboutPage />\n          </Route>\n          <Route path=\"/new-post\">\n            <PostPage />\n          </Route>\n          <Route path=\"/edit-post/:id\">\n            <EditPostPage />\n          </Route>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterPage />\n          </Route>\n          <Route path=\"/posts/:id\">\n            <ArticlePage />\n          </Route>\n        </Switch>\n      </Router>\n    </Root>\n  )\n}\n\nexport { Loading }\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\nimport postReducer from './reducers/postReducer'\nimport userReducer from './reducers/userReducer'\n\nexport default configureStore({\n  reducer: {\n    posts: postReducer,\n    users: userReducer\n  }\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport { ThemeProvider } from 'styled-components'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nconst theme = {\n  colors: {\n    primary_300: '#3333dd',\n    primary_400: '#e33e3e',\n    primary_500: '#af0505'\n  }\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}